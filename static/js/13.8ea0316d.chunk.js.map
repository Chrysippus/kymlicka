{"version":3,"sources":["pages/Asf.js","components/shared/getFile.js"],"names":["Asf","c","getFile","name","content","GetFile","file","useAxios","data","loading","error","variant"],"mappings":"uGAAA,mGAMe,SAASA,IACtB,IAAIC,EAAIC,YAF2B,0CAGnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,sGAGA,0BACEC,KAAK,cACLC,QAAQ,saAOZ,kBAAC,IAAD,KAAW,IAAMH,GAAQ,Q,uHCnBhB,SAASI,EAAQC,GAAO,IAAD,EACDC,YACjCD,GAAc,MAFoB,sBAC3BE,EAD2B,EAC3BA,KAAMC,EADqB,EACrBA,QAASC,EADY,EACZA,MAGxB,OACED,GAAU,kBAAC,IAAD,MACVC,GAAQ,kBAAC,IAAD,CAAOC,QAAQ,UAAf,wBACRH,GAAc","file":"static/js/13.8ea0316d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport getFile from \"../components/shared/getFile\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nconst asf = process.env.PUBLIC_URL + \"/contents/animal-studies-fellowship.md\";\r\nexport default function Asf() {\r\n  let c = getFile(asf);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          Postdoctoral Fellowship in Animal Studies - Will Kymlicka's Website\r\n        </title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"The Department of Philosophy at Queen's University invites applications \r\n          for its annual Postdoctoral Fellowship in Animal Studies program. This is a two-year \r\n          non-renewable fellowship. The successful applicant will have a demonstrated expertise \r\n          in animal ethics, law and public policy, show evidence of teaching potential, and be \r\n          able to participate constructively in departmental and collegial activities.\"\r\n        />\r\n      </Helmet>\r\n      <Markdown>{\"\" + (c ? c : \"\")}</Markdown>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport useAxios from \"axios-hooks\";\r\nimport { Spinner, Alert } from \"react-bootstrap\";\r\n\r\nexport default function GetFile(file) {\r\n  const [{ data, loading, error }] = useAxios(\r\n    file ? file : null\r\n  );\r\n  return (\r\n    loading ? <Spinner /> : \"\",\r\n    error ? <Alert variant=\"danger\">Something went wrong</Alert> : \"\",\r\n    data ? data : null\r\n  )\r\n}\r\n"],"sourceRoot":""}