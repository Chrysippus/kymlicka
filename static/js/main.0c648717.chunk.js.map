{"version":3,"sources":["components/shared/WKNavbar.js","components/shared/Head.js","components/shared/Foot.js","components/shared/waiting.js","App.js","serviceWorker.js","index.js"],"names":["WKNavbar","Navbar","collapseOnSelect","className","bg","expand","Brand","href","style","textDecoration","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","as","to","target","Head","date","Date","Foot","Container","fluid","fontSize","color","getFullYear","toDateString","toTimeString","Waiting","Path","props","fallback","minHeight","Spinner","animation","role","Home","lazy","Bio","Asf","Aff","News","Pub","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SAGe,SAASA,IACtB,OACE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,UAAU,aAAaC,GAAG,QAAQC,OAAO,MAChE,kBAACJ,EAAA,EAAOK,MAAR,CACEC,KAAK,MACLJ,UAAU,YACVK,MAAO,CAAEC,eAAgB,SAH3B,MAOA,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,mBAAmBR,UAAU,aAC1D,kBAACF,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKX,UAAU,WACb,kBAACW,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGC,GAAIF,IAAMG,GAAG,KAApC,QAGA,kBAACJ,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGC,GAAIF,IAAMG,GAAG,cAApC,aAGA,kBAACJ,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGG,OAAO,SAASZ,KAA+B,6BAAtE,MAGA,kBAACO,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGC,GAAIF,IAAMG,GAAG,iBAApC,gBAGA,kBAACJ,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGC,GAAIF,IAAMG,GAAG,iBAApC,gBAGA,kBAACJ,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGC,GAAIF,IAAMG,GAAG,eAApC,cAGA,kBAACJ,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGT,KAAK,8BAA5B,aACA,kBAACO,EAAA,EAAIC,KAAL,CAAUC,SAAU,EAAGC,GAAIF,IAAMG,GAAG,8BAApC,gCClCH,IAAME,EAAO,kBAAM,4BAAQP,GAAG,YACnC,+C,QCAIQ,EAAO,IAAIC,KACJC,EAAO,kBAClB,4BAAQV,GAAG,cAAcV,UAAU,QACjC,kBAACqB,EAAA,EAAD,CAAWC,OAAK,EAACtB,UAAU,WACzB,uBAAGA,UAAU,eACX,uBACEA,UAAU,iCACVI,KAAK,6CAEL,uBAAGJ,UAAU,gCACb,0BAAMA,UAAU,WAAhB,mBAEF,uBACEA,UAAU,iCACVI,KAAK,8DAEL,uBAAGJ,UAAU,sCACb,0BAAMA,UAAU,WAAhB,sBAGJ,uBAAGA,UAAU,cAAcK,MAAO,CAAEkB,SAAU,UAA9C,qDAEE,6BAFF,0DAIE,8BAEF,uBAAGvB,UAAU,eACV,gBACD,uBACEK,MAAO,CAAEmB,MAAO,OAAQlB,eAAgB,aACxCF,KAAK,8BAFP,iBAMC,KAAOc,EAAKO,cAAgB,kBAC7B,uBACEpB,MAAO,CAAEmB,MAAO,OAAQlB,eAAgB,aACxCF,KAAK,gCAFP,iBAMC,KAAOc,EAAKO,cACb,6BACC,kBAAoBP,EAAKQ,eAAiB,IAAMR,EAAKS,mB,gBC3CvD,SAASC,EAAQC,GACtB,OAAO,SAAAC,GAAK,OACV,kBAAC,WAAD,CACEC,SACE,yBACE/B,UAAU,mDACVK,MAAO,CAAE2B,UAAW,SAEpB,kBAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAMnC,UAAU,WAAhB,iBAKN,kBAAC6B,EAAD,Q,YCCAO,EAAOC,gBAAK,kBAAM,uDAClBC,EAAMD,gBAAK,kBAAM,uDAEjBE,EAAMF,gBAAK,kBAAM,wDACjBG,EAAMH,gBAAK,kBAAM,uDACjBI,EAAOJ,gBAAK,kBAAM,8DAClBK,EAAML,gBAAK,kBAAM,uDAoCRM,MAnCf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,IAChB,kBAAC,IAAD,KACA,yBAAK7C,UAAU,OACb,kBAAC,EAAD,MACA,kBAACH,EAAD,MACA,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,6BAA6BC,UAAWpB,EAAQW,KAClE,kBAAC,IAAD,CACEQ,KAAK,gCACLC,UAAWpB,EAAQa,KAErB,kBAAC,IAAD,CAAOM,KAAK,wBAAwBC,UAAWpB,EAAQa,KACvD,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,kBAAkBC,UAAWpB,EAAQa,IACrD,kBAAC,IAAD,CAAU1B,GAAG,iBAEf,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,cAAcC,UAAWpB,EAAQa,KACnD,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,gBAAgBC,UAAWpB,EAAQY,KACrD,kBAAC,IAAD,CAAOO,KAAK,yBAAyBC,UAAWpB,EAAQc,KACxD,kBAAC,IAAD,CAAOK,KAAK,oBAAoBC,UAAWpB,EAAQc,KACnD,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,gBAAgBC,UAAWpB,EAAQc,KACrD,kBAAC,IAAD,CAAOK,KAAK,aAAaC,UAAWpB,EAAQU,KAC5C,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,UAAWpB,EAAQQ,KACzC,kBAAC,IAAD,CAAOY,UAAWpB,EAAQQ,OAG9B,kBAAC,EAAD,UCxCYa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0c648717.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function WKNavbar() {\r\n  return (\r\n    <Navbar collapseOnSelect className=\"sticky-top\" bg=\"white\" expand=\"lg\">\r\n      <Navbar.Brand\r\n        href=\"/#/\"\r\n        className=\"d-lg-none\"\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        WK\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"border-0\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mx-auto\">\r\n          <Nav.Link eventKey={1} as={Link} to=\"/\">\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link eventKey={2} as={Link} to=\"/biography\">\r\n            Biography\r\n          </Nav.Link>\r\n          <Nav.Link eventKey={3} target=\"_blank\" href={process.env.PUBLIC_URL + \"/contents/docs/CV-web.pdf\"}>\r\n            CV\r\n          </Nav.Link>\r\n          <Nav.Link eventKey={4} as={Link} to=\"/publications\">\r\n            Publications\r\n          </Nav.Link>\r\n          <Nav.Link eventKey={5} as={Link} to=\"/affiliations\">\r\n            Affiliations\r\n          </Nav.Link>\r\n          <Nav.Link eventKey={6} as={Link} to=\"/newsletter\">\r\n            Newsletter\r\n          </Nav.Link>\r\n          <Nav.Link eventKey={7} href=\"https://www.queensu.ca/mcp\">MCP Index</Nav.Link>\r\n          <Nav.Link eventKey={8} as={Link} to=\"/animal-studies-fellowship\">\r\n            Animal Studies Fellowship\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport const Head = () => <header id=\"page-top\">\r\n  <h1>Will Kymlicka</h1>\r\n</header>;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nconst date = new Date();\r\nexport const Foot = () => (\r\n  <footer id=\"page-bottom\" className=\"px-4\">\r\n    <Container fluid className=\"mx-auto\">\r\n      <p className=\"text-center\">\r\n        <a\r\n          className=\"text-white mx-1 d-inline-block\"\r\n          href=\"http://queensu.academia.edu/WillKymlicka/\"\r\n        >\r\n          <i className=\"ai ai-academia-square ai-5x\"></i>\r\n          <span className=\"sr-only\">(Academia.edu)</span>\r\n        </a>\r\n        <a\r\n          className=\"text-white mx-1 d-inline-block\"\r\n          href=\"http://scholar.google.ca/citations?hl=en&amp;user=AoKsdeAAAAAJ\"\r\n        >\r\n          <i className=\"ai ai-google-scholar-square ai-5x\"></i>\r\n          <span className=\"sr-only\">(Google Scholar)</span>\r\n        </a>\r\n      </p>\r\n      <p className=\"text-center\" style={{ fontSize: \"1.2em\" }}>\r\n        Department of Philosophy | Watson Hall Office #313\r\n        <br />\r\n        Queen's University | Kingston, Ontario, Canada, K7L 3N6\r\n        <br />\r\n      </p>\r\n      <p className=\"text-center\">\r\n        {\"Content © \"}\r\n        <a\r\n          style={{ color: \"#fff\", textDecoration: \"underline\" }}\r\n          href=\"mailto:kymlicka@queensu.ca\"\r\n        >\r\n          Will Kymlicka\r\n        </a>\r\n        {\", \" + date.getFullYear() + \" | Design © \"}\r\n        <a\r\n          style={{ color: \"#fff\", textDecoration: \"underline\" }}\r\n          href=\"https://www.torindoppelt.com\"\r\n        >\r\n          Torin Doppelt\r\n        </a>\r\n        {\", \" + date.getFullYear()}\r\n        <br />\r\n        {\"Last modified: \" + date.toDateString() + \" \" + date.toTimeString()}\r\n      </p>\r\n    </Container>\r\n  </footer>\r\n);\r\n","import React, { Suspense } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nexport function Waiting(Path) {\r\n  return props => (\r\n    <Suspense\r\n      fallback={\r\n        <div\r\n          className=\"d-flex justify-content-center align-items-center\"\r\n          style={{ minHeight: \"80vh\" }}\r\n        >\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      }\r\n    >\r\n      <Path />\r\n    </Suspense>\r\n  );\r\n}\r\n","import React, { lazy } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"academicons\";\r\nimport \"./css/main.css\";\r\nimport \"./css/style.scss\";\r\nimport \"./css/fonts.css\";\r\nimport WKNavbar from \"./components/shared/WKNavbar\";\r\nimport { Head } from \"./components/shared/Head\";\r\nimport { Foot } from \"./components/shared/Foot\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { Waiting } from \"./components/shared/waiting\";\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nconst Home = lazy(() => import(\"./pages/Home\"));\r\nconst Bio = lazy(() => import(\"./pages/Bio\"));\r\n// const Cv = lazy(() => import(\"./pages/Cv\"));\r\nconst Asf = lazy(() => import(\"./pages/Asf\"));\r\nconst Aff = lazy(() => import(\"./pages/Aff\"));\r\nconst News = lazy(() => import(\"./pages/News\"));\r\nconst Pub = lazy(() => import(\"./pages/Pub\"));\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <HelmetProvider>\r\n      <div className=\"App\">\r\n        <Head />\r\n        <WKNavbar />\r\n        <main>\r\n          <Switch>\r\n            <Route exact path=\"/animal-studies-fellowship\" component={Waiting(Asf)} />\r\n            <Route\r\n              path=\"/newsletter/:no/:year/:month/\"\r\n              component={Waiting(News)}\r\n            />\r\n            <Route path=\"/newsletter/:no/:year\" component={Waiting(News)} />\r\n            <Route exact path=\"/newsletter/:no\" component={Waiting(News)}>\r\n              <Redirect to=\"/newsletter\" />\r\n            </Route>\r\n            <Route exact path=\"/newsletter\" component={Waiting(News)} />\r\n            <Route exact path=\"/affiliations\" component={Waiting(Aff)} />\r\n            <Route path=\"/publications/:id/:sub\" component={Waiting(Pub)} />\r\n            <Route path=\"/publications/:id\" component={Waiting(Pub)} />\r\n            <Route exact path=\"/publications\" component={Waiting(Pub)} />\r\n            <Route path=\"/biography\" component={Waiting(Bio)} />\r\n            <Route exact path=\"/\" component={Waiting(Home)} />\r\n            <Route component={Waiting(Home)} />\r\n          </Switch>\r\n        </main>\r\n        <Foot />\r\n      </div>\r\n      </HelmetProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}